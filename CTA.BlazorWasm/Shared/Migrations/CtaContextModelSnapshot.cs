// <auto-generated />
using System;
using CTA.BlazorWasm.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTA.BlazorWasm.Shared.Migrations
{
    [DbContext(typeof(CtaContext))]
    partial class CtaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.CorrespondenceSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceSubTypes");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.CorrespondenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CorrespondenceSubTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CorrespondenceSubTypeId" }, "IX_CorrespondenceTypes_CorrespondenceSubTypeId");

                    b.ToTable("CorrespondenceTypes");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Poc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Pocs");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.ToFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ToFroms");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Tracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("CorrespondenceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("PocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentOrReceived")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.Property<int>("ToFromId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorrespondenceTypeId");

                    b.HasIndex("PocId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ThreadId");

                    b.HasIndex("ToFromId");

                    b.ToTable("Trackings");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.TrackingThread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_TrackingThreads_ProjectId");

                    b.ToTable("TrackingThreads");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.CorrespondenceType", b =>
                {
                    b.HasOne("CTA.BlazorWasm.Shared.Models.CorrespondenceSubType", "CorrespondenceSubType")
                        .WithMany("CorrespondenceTypes")
                        .HasForeignKey("CorrespondenceSubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_cor_type_cor_sub");

                    b.Navigation("CorrespondenceSubType");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Tracking", b =>
                {
                    b.HasOne("CTA.BlazorWasm.Shared.Models.CorrespondenceType", "CorrespondenceType")
                        .WithMany("Trackings")
                        .HasForeignKey("CorrespondenceTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Trackings_CorrespondenceTypes");

                    b.HasOne("CTA.BlazorWasm.Shared.Models.Poc", "Poc")
                        .WithMany("Trackings")
                        .HasForeignKey("PocId")
                        .IsRequired()
                        .HasConstraintName("FK_Trackings_Pocs");

                    b.HasOne("CTA.BlazorWasm.Shared.Models.Status", "Status")
                        .WithMany("Trackings")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Trackings_Statuses");

                    b.HasOne("CTA.BlazorWasm.Shared.Models.TrackingThread", "Thread")
                        .WithMany("Trackings")
                        .HasForeignKey("ThreadId")
                        .IsRequired()
                        .HasConstraintName("FK_Trackings_TrackingThreads");

                    b.HasOne("CTA.BlazorWasm.Shared.Models.ToFrom", "ToFrom")
                        .WithMany("Trackings")
                        .HasForeignKey("ToFromId")
                        .IsRequired()
                        .HasConstraintName("FK_Trackings_ToFroms");

                    b.Navigation("CorrespondenceType");

                    b.Navigation("Poc");

                    b.Navigation("Status");

                    b.Navigation("Thread");

                    b.Navigation("ToFrom");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.TrackingThread", b =>
                {
                    b.HasOne("CTA.BlazorWasm.Shared.Models.Project", "Project")
                        .WithMany("TrackingThreads")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tracking_thread_project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.CorrespondenceSubType", b =>
                {
                    b.Navigation("CorrespondenceTypes");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.CorrespondenceType", b =>
                {
                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Poc", b =>
                {
                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Project", b =>
                {
                    b.Navigation("TrackingThreads");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.Status", b =>
                {
                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.ToFrom", b =>
                {
                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("CTA.BlazorWasm.Shared.Models.TrackingThread", b =>
                {
                    b.Navigation("Trackings");
                });
#pragma warning restore 612, 618
        }
    }
}
