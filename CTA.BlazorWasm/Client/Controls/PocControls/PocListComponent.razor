@inject PocManager pocManager

<div class="row mb-4">
    <div class="col col-md-6 col-sm-12">
        <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Success" Link="/pocs/create">New</MudButton>
    </div>
</div>


<MudTable Items="@pocList" Hover="true" Striped="true" Dense="true">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Initials</MudTh>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Active?</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Thread">@context.Id</MudTd>
        <MudTd DataLabel="Thread">@context.Name</MudTd>
        <MudTd DataLabel="Thread">@context.FirstName</MudTd>
        <MudTd DataLabel="Thread">@context.LastName</MudTd>
        <MudTd DataLabel="Thread">@context.IsActive</MudTd>
        <MudTd DataLable="SELECT">
            <a href="/poc/edit/@context.Id" role="button">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Color="Color.Warning"></MudIcon>    
            </a>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private List<PocListVm> pocList = new();

    protected override async Task OnInitializedAsync()
    {
        var items = await pocManager.GetAllAsync();
        pocList = Mapping.Mapper.Map<List<PocListVm>>(items);
    }
}