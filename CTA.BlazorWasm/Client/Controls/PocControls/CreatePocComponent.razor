@inject PocManager pocManager
@inject NavigationManager _nav

<div class="row">
    <div class="col col-sm-12 col-md-6">
        <EditForm Model="@PocListVm" OnValidSubmit="@CreatePoc">
            <DataAnnotationsValidator />
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary></Microsoft.AspNetCore.Components.Forms.ValidationSummary>

            <FormFieldComponent LabelName="First">
                <ControlToRender>
                    <InputText class="form-control" @bind-Value="PocListVm.FirstName" />
                </ControlToRender>
            </FormFieldComponent>

            <FormFieldComponent LabelName="Last">
                <ControlToRender>
                    <InputText class="form-control" @bind-Value="PocListVm.LastName" />
                </ControlToRender>
            </FormFieldComponent>

            <FormFieldComponent LabelName="Initials">
                <ControlToRender>
                    <InputText class="form-control" @bind-Value="PocListVm.Name" />
                </ControlToRender>
            </FormFieldComponent>

            <FormFieldComponent LabelName="IsActive?">
                <ControlToRender>
                    <InputCheckbox @bind-Value="PocListVm.IsActive" />
                </ControlToRender>
            </FormFieldComponent>

            <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Size="Size.Small">Enter</MudButton>
            <MudButton Link="/pocs" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small">Cancel</MudButton>

        </EditForm>
    </div>
</div>

@code {
    public PocListVm PocListVm { get; set; } = new();

    protected async Task CreatePoc()
    {
        var poc = Mapping.Mapper.Map<Poc>(PocListVm);
        await pocManager.AddAsync(poc);
        _nav.NavigateTo("/pocs");
    }
}
