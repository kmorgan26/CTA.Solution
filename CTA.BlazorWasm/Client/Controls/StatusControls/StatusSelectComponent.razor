@inject StatusManager statusManager

<FormFieldComponent LabelName="Status">
    <ControlToRender>
        <InputSelect ValueExpression="@(()=> SelectedStatusId)" id="statusSelect" DisplayName="Status" class="form-control" Value="SelectedStatusId"
            ValueChanged="@((int? value) => ChangeStatus(value))">
            <option value="0">-----</option>
            @foreach (var item in _statusVms)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </InputSelect>
    </ControlToRender>
</FormFieldComponent>

@code {

    [Parameter]
    public EventCallback<int?> StatusIdChanged { get; set; }

    [Parameter]
    public int? SelectedStatusId { get; set; }

    [CascadingParameter]
    public AppStateComponent? appStateComponent { get; set; }

    private List<GenericListVm> _statusVms = new();

    private async Task ChangeStatus(int? value)
    {
        SelectedStatusId = Convert.ToInt32(value);
        await StatusIdChanged.InvokeAsync(SelectedStatusId);
    }
    protected override async Task OnInitializedAsync()
    {
        var statuss = await statusManager.GetAllAsync();
        _statusVms = Mapping.Mapper.Map<List<GenericListVm>>(statuss);
    }
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            SelectedStatusId = appStateComponent.PaginationQuery.TrackingFilter.StatusId != null ? appStateComponent.PaginationQuery.TrackingFilter.StatusId : 0;
        }
        catch { }
    }
}