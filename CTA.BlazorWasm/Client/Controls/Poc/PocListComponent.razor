@inject IPocRepo _pocs

<div class="row mb-4">
    <div class="col col-md-6 col-sm-12">
        <a class="btn btn-success btn-sm" href="/pocs/create" role="button">New</a>
    </div>
</div>

<DataGrid TItem="PocListVm"
    PageSize="10"
    ShowPager
    Data="pocList"
    CommandMode="DataGridCommandMode.Default"
    Class="col col-md-6 col-sm-12"
    Responsive>
    
    <DataGridColumn TItem="PocListVm" Field="@nameof(PocListVm.Id)" Caption="ID" Sortable="false"/>
    <DataGridColumn TItem="PocListVm" Field="@nameof(PocListVm.Name)" Caption="Initials" Sortable="false"/>
    <DataGridColumn TItem="PocListVm" Field="@nameof(PocListVm.FirstName)" Caption="First Name" Sortable="false"/>
    <DataGridColumn TItem="PocListVm" Field="@nameof(PocListVm.LastName)" Caption="Last Name" Sortable="true"/>
    <DataGridColumn TItem="PocListVm" Field="@nameof(PocListVm.IsActive)" Caption="Active?" Sortable="false"/>
    
    <DataGridColumn TItem="PocListVm">
        <DisplayTemplate>
            @{
                <a class="btn btn-info btn-sm" href="/poc/edit/@context.Id" role="button">Edit</a>
            }
        </DisplayTemplate>
    </DataGridColumn>
    
</DataGrid>

@code {
    private List<PocListVm> pocList = new();

    protected override async Task OnInitializedAsync()
    {
        var items = await _pocs.GetAllAsync();
        pocList = Mapping.Mapper.Map<List<PocListVm>>(items);
    }

}
