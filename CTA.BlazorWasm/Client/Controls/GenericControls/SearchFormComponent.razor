@inject TrackingManager trackingManager

<row>
    <div class="col" TextAlignment="TextAlignment.Center">
        <StatusRadioComponent @bind-StatusValue="_statusValue"></StatusRadioComponent>
    </div>
    <div class="col" TextAlignment="TextAlignment.Center">
        <ToFromRadioComponent @bind-ToFromValue="_toFromValue"></ToFromRadioComponent>
    </div>
</row>
<row>
    <div class="col" TextAlignment="TextAlignment.End">
        Subject: 
    </div>
    <div class="col" TextAlignment="TextAlignment.Start">
        @*<TextEdit Placeholder= "Enter Subject to Search" @bind-value="_subjectText"></TextEdit>*@
    </div>
</row>
<row>
    <div class="col" TextAlignment="TextAlignment.End">
        Comments: 
    </div>
    <div class="col" TextAlignment="TextAlignment.Start">
        @*<TextEdit Placeholder= "Enter Comments to Search" @bind-Text="_commentsText"></TextEdit>*@
    </div>
</row>
<row>
    <div class="col">
        <button @onclick="OnSearchbuttonClicked" >SEARCH</button>
        
    </div>
</row>

@code {
    private int _toFromValue = 0;
    private int _statusValue = -1;
    private string? _subjectText { get; set; }
    private string? _commentsText { get; set; }

    TrackingFilter? _trackingFilter = new();

    [Parameter]
    public EventCallback<string> FilterValuesChanged { get; set; }

    public async Task OnSearchbuttonClicked()
    {
        await SetTrackingFilterValues();
        var encodedString = await SerializeAndEncode.ObjectToJsonAndEncode(_trackingFilter);
        await FilterValuesChanged.InvokeAsync(encodedString);
    }

    private Task SetTrackingFilterValues()
    {
        _trackingFilter = new();
        _trackingFilter.CommentsText =  _commentsText;
        _trackingFilter.SubjectText = _subjectText;
        _trackingFilter.ToFromIds = new int[] { _toFromValue };
        _trackingFilter.StatusIds = new int[] { _statusValue };
        return Task.CompletedTask;
    }
    
}