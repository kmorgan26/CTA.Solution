
@if (_hideControls)
{
    <div class="mb-0">
        <span class="badge badge-success mb-3" @onclick="ToggleHideControls">show</span>
    </div>
}
else

{
    <span class="badge badge-danger" @onclick="ToggleHideControls">hide</span>
    <div class="border border-secondary mb-2 rounded p-3">

        <EditForm Model="@appStateComponent.TrackingFilter" OnValidSubmit="GetSearchResults">

            <div class="row">

                <div class="col-md-2">

                    <FormFieldComponent LabelName="From (Sent/Received)">
                        <ControlToRender>
                            <InputDate @bind-Value="@appStateComponent.TrackingFilter.StartDate" />
                        </ControlToRender>
                    </FormFieldComponent>

                </div>

                <div class="col-md-2">

                    <FormFieldComponent LabelName="To (Sent/Received)">
                        <ControlToRender>
                            <InputDate @bind-Value="@appStateComponent.TrackingFilter.EndDate" />
                        </ControlToRender>
                    </FormFieldComponent>

                </div>

            </div>

            <div class="row">

                <div class="col-md-2">
                    <StatusSelectComponent StatusIdChanged="UpdateStatus"></StatusSelectComponent>
                </div>

                <div class="col-md-2">
                    <CorrTypeSelectComponent CorrTypeIdChanged="UpdateCorrType"></CorrTypeSelectComponent>
                </div>

                <div class="col-md-2">
                    <PocSelectComponent PocIdChanged="UpdatePoc"></PocSelectComponent>
                </div>

                <div class="col-md-2">
                    <ToFromSelectComponent TofromIdChanged="UpdateTofrom"></ToFromSelectComponent>
                </div>

            </div>

            <div class="row">

                <div class="col-md-4">
                    <FormFieldComponent LabelName="Subject">
                        <ControlToRender>
                            <textarea class="form-control" id="subject" rows="3" @bind="@appStateComponent.TrackingFilter.SubjectText"></textarea>
                        </ControlToRender>
                    </FormFieldComponent>
                </div>
                <div class="col-md-4">
                    <FormFieldComponent LabelName="Comments">
                        <ControlToRender>
                            <textarea class="form-control" id="comments" rows="3" @bind="@appStateComponent.TrackingFilter.CommentsText"></textarea>
                        </ControlToRender>
                    </FormFieldComponent>
                </div>

            </div>

            <button type="submit" class="btn btn-primary btn-sm">Search</button>

        </EditForm>

    </div>
}

@code {

    [CascadingParameter]
    public AppStateComponent? appStateComponent { get; set; }

    [Parameter]
    public EventCallback<bool> OnValidSubmit { get; set; }

    private string? encodedString { get; set; }

    private async Task GetSearchResults()
    {
        //encodedString = await SerializeAndEncode.ObjectToJsonAndEncode(@appStateComponent.TrackingFilter);

        await OnValidSubmit.InvokeAsync(true);
    }
    
    private bool _hideControls { get; set; }

    void ToggleHideControls()
    {
        _hideControls = !_hideControls;
    }
    void UpdateStatus(int? id)
    {
        appStateComponent.TrackingFilter.StatusId = id;
    }
    void UpdateCorrType(int? id)
    {
        appStateComponent.TrackingFilter.CorrTypeId = id;
    }
    void UpdatePoc(int? id)
    {
        appStateComponent.TrackingFilter.PocId = id;
    }
    void UpdateTofrom(int? id)
    {
        appStateComponent.TrackingFilter.ToFromId = id;
    }
}