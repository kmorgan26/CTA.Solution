@using System.Text.Json
@inject TrackingThreadManager trackingThreadManager

<h3>
    <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Size="Size.Large" Class="m-3" />
    Thread List for: <ProjectNameComponent ProjectId="@ProjectId"></ProjectNameComponent>
</h3>

<div class="row mb-4">
    <div class="col col-md-6 col-sm-12">
        <a class="btn btn-success btn-sm" href=@($"threads/create/{ProjectId}") role="button">New</a>
    </div>
</div>

<MudTable Items="@threadList" Hover="true" Striped="true" Dense="true">
    <HeaderContent>
        <MudTh>Thread #</MudTh>
        <MudTh>Topic</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Topic">@context.Name</MudTd>
        <MudTd DataLable="SELECT">
            <a href="/thread/@context.Id">
                <MudIcon Icon="@Icons.Material.Filled.Info" Color="Color.Info"></MudIcon>    
            </a>
        </MudTd>
        <MudTd DataLable="SELECT">
            <a href="/thread/edit/@context.Id" role="button">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Color="Color.Warning"></MudIcon>    
            </a>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {

    [Parameter]
    public int ProjectId { get; set; }

    private List<GenericListVm> threadList = new();

    protected override async Task OnInitializedAsync()
    {
        var id = ProjectId;
        var items = await trackingThreadManager.GetThreadsByProjectId(id);
        threadList = Mapping.Mapper.Map<List<GenericListVm>>(items);
    }

}
