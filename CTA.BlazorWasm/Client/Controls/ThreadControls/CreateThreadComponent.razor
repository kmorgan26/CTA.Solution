@inject TrackingThreadManager trackingThreadManager
@inject NavigationManager _nav

<div class="row">
    <div class="col col-sm-12 col-md-6">
        <EditForm Model="@ThreadVm" OnValidSubmit="@CreateThread">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <MudHidden @bind-Value="@ProjectId" />

            <FormFieldComponent LabelName="Thread">
                <ControlToRender>
                    <InputText class="form-control" @bind-Value="ThreadVm.Name" />
                </ControlToRender>
            </FormFieldComponent>

            <FormFieldComponent LabelName="Active?">
                <ControlToRender>
                    <InputCheckbox @bind-Value="ThreadVm.IsActive"/>
                </ControlToRender>
            </FormFieldComponent>

            <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Size="Size.Small">Create</MudButton>
            <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Error" Link="@($"/project/{ProjectId}")">Cancel</MudButton>
            
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public int ProjectId { get; set; }

    public TrackingThreadUpdateVm ThreadVm { get; set; } = new();

    protected async Task CreateThread()
    {
        var thread = Mapping.Mapper.Map<TrackingThread>(ThreadVm);
        await trackingThreadManager.AddAsync(thread);
        _nav.NavigateTo("/project/" + @thread.ProjectId);
    }
    protected override void OnInitialized()
    {
        ThreadVm.ProjectId = this.ProjectId;
    }

}
