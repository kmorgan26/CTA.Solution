@inject TrackingThreadManager trackingThreadManager
@inject NavigationManager _nav

<div class="row">
    <div class="col-md-6 col-sm-12">
        @if (ThreadVm != null)
        {
            <EditForm Model="@ThreadVm" OnValidSubmit="@UpdateThread">

                <FormFieldComponent LabelName="Topic">
                    <ControlToRender>
                        <InputText class="form-control" @bind-Value="ThreadVm.Name" />
                    </ControlToRender>
                </FormFieldComponent>

                <FormFieldComponent LabelName="Active?">
                    <ControlToRender>
                        <InputCheckbox @bind-Value="ThreadVm.IsActive"/>
                    </ControlToRender>
                </FormFieldComponent>

                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Size="Size.Small">Update</MudButton>
                <MudButton Link=@($"/project/{ThreadVm.ProjectId}") Variant="Variant.Filled" Color="Color.Error" Size="Size.Small">Cancel</MudButton>
            
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public int ThreadId { get; set; }
    
    public TrackingThreadUpdateVm ThreadVm { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var thread = await trackingThreadManager.GetByIdAsync(ThreadId);
        ThreadVm = Mapping.Mapper.Map<TrackingThreadUpdateVm>(thread);
    }
    protected async Task UpdateThread()
    {
        var thread = Mapping.Mapper.Map<TrackingThread>(ThreadVm);
        await trackingThreadManager.UpdateAsync(thread);
        _nav.NavigateTo("/project/" + @thread.ProjectId);
    }
}