@inject TrackingManager trackingManager

<h3>
    <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Size="Size.Large" Class="m-3" />
    Tracking List for: <TrackingNameComponent ThreadId="@ThreadId"></TrackingNameComponent>
</h3>

<div class="row mb-4">
    <div class="col col-md-6 col-sm-12">
        <a class="btn btn-success btn-sm" href=@($"/trackings/create/{@ThreadId}") role="button">New</a>
    </div>
</div>

<MudTable Items="@trackingList" Hover="true" Striped="true" Dense="true">
    <HeaderContent>
        <MudTh>Tracking #</MudTh>
        <MudTh>Subject</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>To/From</MudTh>
        <MudTh>Sent/Rec</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Topic">@context.Subject</MudTd>
        <MudTd DataLabel="Topic">@context.Status</MudTd>
        <MudTd DataLabel="Topic">@context.ToFrom</MudTd>
        <MudTd DataLabel="Topic">@context.SentOrReceived.ToShortDateString()</MudTd>
        <MudTd DataLable="SELECT">
            <a href="/tracking/@context.Id">
                <MudIcon Icon="@Icons.Material.Filled.Info" Color="Color.Info"></MudIcon>    
            </a>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {

    [Parameter]
    public int ThreadId { get; set; }

    private List<TrackingRowVm> trackingList = new();

    protected override async Task OnInitializedAsync()
    {
        var items = await trackingManager.GetTrackingsByThreadId(ThreadId);
        trackingList = Mapping.Mapper.Map<List<TrackingRowVm>>(items);
    }

}
