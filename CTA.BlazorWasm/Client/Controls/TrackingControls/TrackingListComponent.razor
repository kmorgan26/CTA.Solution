@inject TrackingManager trackingManager

<h3>
    <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Size="Size.Large" Class="m-3" />
    Tracking List for: <TrackingNameComponent ThreadId="@ThreadId"></TrackingNameComponent>
</h3>

<div class="row mb-4">
    <div class="col col-md-6 col-sm-12">
        <a class="btn btn-success btn-sm" href=@($"/trackings/create/{@ThreadId}") role="button">New</a>
    </div>
</div>

<MudDataGrid Items="@trackingList"
    PageSize="5"
    ShowPager
    Data="trackingList"
    Class="table table-striped"
    CommandMode="DataGridCommandMode.Default"
    Responsive>
    <Column T="TrackingRowVm" Field="@nameof(TrackingRowVm.Id)" Caption="ID" Sortable="true"/>
    <Column T="TrackingRowVm" Field="@nameof(TrackingRowVm.Subject)" Caption="Subject" Sortable="false"/>
    <Column T="TrackingRowVm" Field="@nameof(TrackingRowVm.Status)" Caption="Status" Sortable="false"/>
    <Column T="TrackingRowVm" Field="@nameof(TrackingRowVm.ToFrom)" Caption="To/From" Sortable="false"/>
    <Column T="TrackingRowVm" Field="@nameof(TrackingRowVm.SentOrReceived)" DisplayFormat="{0:d}" Caption="Sent/Received" Sortable="false"/>
    <Column T="TrackingRowVm">
        @*<DisplayTemplate>
            @{
                <a class="btn btn-primary btn-sm" href="/tracking/@context.Id" role="button">Select</a>
            }
        </DisplayTemplate>*@
    </Column>
    <Column T="TrackingRowVm">
        @*<DisplayTemplate>
            @{
                <a class="btn btn-info btn-sm" href="/tracking/edit/@context.Id" role="button">Edit</a>
            }
        </DisplayTemplate>*@
    </Column>
</MudDataGrid>

@code {

    [Parameter]
    public int ThreadId { get; set; }

    private List<TrackingRowVm> trackingList = new();

    protected override async Task OnInitializedAsync()
    {
        //TODO Fix this for the THread parameter
        var items = await trackingManager.GetByIdAsync(ThreadId);
        trackingList = Mapping.Mapper.Map<List<TrackingRowVm>>(items);
    }

}
