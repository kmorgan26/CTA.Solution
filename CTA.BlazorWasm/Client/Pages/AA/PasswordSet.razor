@page "/password/set"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Password Set</h3>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter a new password.</h5>

        <EditForm Model="_passwordSetRequest" OnValidSubmit="SetPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">New Password</label>
                <InputText type="password" Id="password" class="form-control" @bind-Value="_passwordSetRequest.Password" />
                <ValidationMessage For="@(() => _passwordSetRequest.Password)" />
            </div>

            <div class="form-group">
                <label for="email">Confirm New Password</label>
                <InputText type="password" Id="verify" class="form-control" @bind-Value="_passwordSetRequest.ConfirmPassword" />
                <ValidationMessage For="@(() => _passwordSetRequest.ConfirmPassword)" />
            </div>
            <input type="hidden" @bind-value="_passwordSetRequest.Email" />

            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>
@_passwordSetRequest.Email

@code {

    private PasswordSetRequest? _passwordSetRequest = new();
    private bool ShowErrors;
    private IEnumerable<string>? Errors;
    string id = string.Empty;
    //string code = string.Empty;

    private async Task SetPassword()
    {
        ShowErrors = false;
        var result = await AuthService.SetPassword(_passwordSetRequest);

        if(result.Successful)
        {
            NavigationManager.NavigateTo("/password/success");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
            NavigationManager.NavigateTo("/password/fail");
        }
    }
    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        NavigationManager.TryGetQueryString<string>("id", out id);

        _passwordSetRequest.Email = id;
    }
}