@page "/password/change"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Password Change</h3>


<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your email address and a reset link will be sent to your email.</h5>

        <EditForm Model="_passwordChangeRequest" OnValidSubmit="ChangePassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="_passwordChangeRequest.Email" />
                <ValidationMessage For="@(() => _passwordChangeRequest.Email)" />
            </div>
            
            <div class="form-group">
                <label for="email">Old Password</label>
                <InputText type="password" Id="oldpassword" class="form-control" @bind-Value="_passwordChangeRequest.OldPassword" />
                <ValidationMessage For="@(() => _passwordChangeRequest.OldPassword)" />
            </div>

            <div class="form-group">
                <label for="email">New Password</label>
                <InputText type="password" Id="password" class="form-control" @bind-Value="_passwordChangeRequest.NewPassword" />
                <ValidationMessage For="@(() => _passwordChangeRequest.NewPassword)" />
            </div>

            <div class="form-group">
                <label for="email">Confirm New Password</label>
                <InputText type="password" Id="verify" class="form-control" @bind-Value="_passwordChangeRequest.ConfirmNewPassword" />
                <ValidationMessage For="@(() => _passwordChangeRequest.ConfirmNewPassword)" />
            </div>


            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private PasswordChangeRequest? _passwordChangeRequest = new();
    private bool ShowErrors;
    private IEnumerable<string>? Errors;

    private async Task ChangePassword()
    {
        ShowErrors = false;
        var result = await AuthService.ChangePassword(_passwordChangeRequest);

        if(result.Successful)
        {
            NavigationManager.NavigateTo("/password/success");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
            NavigationManager.NavigateTo("/password/success");
        }
    }

}
